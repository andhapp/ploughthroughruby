I"ã
<p><a href="https://webpack.github.io/docs/webpack-dev-server.html">Webpack dev server</a> is pretty awesome. In my <a href="http://ploughthroughruby.co.uk/2015/11/30/integrate-react-es6-webpack-babel-with-rails.html/">last post</a>, I set up React, ES6, Babel and Webpack and the only thing outstanding was the webpack dev server.</p>

<p>With a webpack dev server running, developers can update their code and have the code changes show up straightaway in the browser, thanks to websockets. In order to implement it for a rails application, I did the following:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;% if Rails.env.development? %&gt;
  &lt;%= javascript_include_tag 'http://localhost:9999/bundle.js', 'data-turbolinks-track' =&gt; true %&gt;
&lt;% else %&gt;
  &lt;%= javascript_include_tag 'bundle', 'data-turbolinks-track' =&gt; true %&gt;
&lt;% end %&gt;
</code></pre></div></div>

<p>For development mode, I am downloading the <code class="highlighter-rouge">bundle.js</code> from <code class="highlighter-rouge">localhost:9999</code>. Thatâ€™s the port where the webpack dev server is running at. For the production mode, the <code class="highlighter-rouge">bundle.js</code> is being read from the `app/assets/javascriptsâ€™ directory.</p>

<p>I have the following in my <code class="highlighter-rouge">package.json</code> to to run the webpack dev server on port 9999:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "name": "ecommerce-checklist",
  "version": "0.0.1",
  "description": "Ecommerce checklist",
  "scripts": {
    "start": "webpack-dev-server --content-base ../app/assets/javascripts --port 9999",
    "build": "./node_modules/webpack/bin/webpack.js --progress",
    "build:prod": "./node_modules/webpack/bin/webpack.js -p --progress --config webpack.production.config.js"
  },
  "dependencies": {
    "react": "^0.14.2",
    "react-dom": "^0.14.2"
  },
  "devDependencies": {
    "babel-core": "^6.0.20",
    "babel-eslint": "^4.1.5",
    "babel-loader": "^6.0.1",
    "babel-preset-es2015": "^6.0.15",
    "babel-preset-react": "^6.0.15",
    "babel-preset-stage-0": "^6.0.15",
    "eslint": "^1.8.0",
    "eslint-loader": "^1.1.1",
    "eslint-plugin-react": "^3.6.3",
    "html-webpack-plugin": "^1.6.2",
    "react-hot-loader": "^1.3.0",
    "webpack": "^1.12.2",
    "webpack-dev-server": "^1.12.1"
  }
}
</code></pre></div></div>

<p>Note the bit under <code class="highlighter-rouge">scripts -&gt; start</code>.</p>

<p>This completes the react and webapck setup for a rails application.</p>

<p>One thing to bear in mind, is to create a production ready bundle.js before deploying this application, but that can be part of a capistrano deployment hook.</p>
:ET